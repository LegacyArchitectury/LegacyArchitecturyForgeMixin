plugins {
    id "dev.architectury.loom" version "1.0-SNAPSHOT"
    id "net.kyori.blossom" version "1.3.0"
    id "maven-publish"
}

sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

blossom {
    replaceToken("@version@", version)
}

repositories {

}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    forge "net.minecraftforge:forge:${project.forge_version}"

    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    implementation("io.github.lxgaming:classloaderutils:1.0.0")
    compileOnly("org.apache.logging.log4j:log4j-api:2.17.0")
    compileOnly("org.ow2.asm:asm-analysis:6.2") {
        transitive = false
    }
    compileOnly("org.ow2.asm:asm-util:6.2") {
        transitive = false
    }
    implementation("net.fabricmc:sponge-mixin:0.9.4+mixin.0.8.2") {
        transitive = false
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("META-INF/mods.toml") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"

    def targetVersion = 8
    if (JavaVersion.current().isJava9Compatible()) {
        options.release = targetVersion
    }
}

java {
    withSourcesJar()
}

jar {
    // add some additional metadata to the jar manifest
    manifest {
        attributes([
                "Specification-Title"     : project.mod_id,
                "Specification-Vendor"    : project.mod_author,
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : version,
                "Implementation-Vendor"   : project.mod_author,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),

                "Automatic-Module-Name": project.mod_id,
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0
        ])
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
